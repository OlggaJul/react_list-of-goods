{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","LENGTH","ALPHABET","localeCompare","reverse","console","log","App","state","NONE","setState","sortByLength","sortByAlphabet","reset","this","className","onClick","type","cn","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAqBzB,OAnBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKJ,EAASU,OACZ,OAAOF,EAAGJ,GAAYK,EAAGL,GAE3B,KAAKJ,EAASW,SACZ,OAAOH,EAAGI,cAAcH,GAE1B,QAAS,OAAO,MAIhBJ,GACFC,EAAaO,UAIfC,QAAQC,IAAIX,EAAUC,GAEfC,G,SApCJN,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KA4CE,IAAMgB,EAAb,4MACEC,MAAQ,CACNZ,YAAY,EACZD,SAAUJ,EAASkB,MAHvB,EAMEL,QAAU,WACR,EAAKM,UAAS,SAACF,GAAD,MAAY,CACxBZ,YAAaY,EAAMZ,gBARzB,EAYEe,aAAe,WACb,EAAKD,SAAS,CAAEf,SAAUJ,EAASU,UAbvC,EAgBEW,eAAiB,WACf,EAAKF,SAAS,CAAEf,SAAUJ,EAASW,YAjBvC,EAoBEW,MAAQ,WACN,EAAKH,SAAS,CAAEf,SAAUJ,EAASkB,KAAMb,YAAY,KArBzD,4CAwBE,WACE,MAAiCkB,KAAKN,MAA9BZ,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASF,KAAKF,eACdK,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CACE,WAAYvB,IAAaJ,EAASW,WAPxC,iCAcA,wBACEc,QAASF,KAAKH,aACdM,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CACE,WAAYvB,IAAaJ,EAASU,SAPxC,4BAcA,wBACEe,QAASF,KAAKV,QACda,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CACE,YAA2B,IAAftB,IAPlB,uBAciB,IAAfA,GAAuBD,IAAaJ,EAASkB,OAC7C,wBACEO,QAASF,KAAKD,MACdI,KAAK,SACLF,UAAU,4BAHZ,sBAWJ,6BACE,6BACGtB,EAAkBD,EAAiBsB,KAAKN,OACtCW,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBAvFnD,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ef7da6b4.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return g1[sortType] - g2[sortType];\n\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      default: return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={this.sortByAlphabet}\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={this.sortByLength}\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={this.reverse}\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-warning',\n              {\n                'is-light': isReversed === false,\n              },\n            )}\n          >\n            Reverse\n          </button>\n\n          {(isReversed === true || sortType !== SortType.NONE) && (\n            <button\n              onClick={this.reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state)\n              .map(good => <li data-cy=\"Good\" key={good}>{good}</li>)}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}